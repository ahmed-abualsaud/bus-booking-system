{"id":"node_modules/kafkajs/src/utils/groupBy.js","dependencies":[{"name":"/var/www/html/bus-booking-prototype/package.json","includedInParent":true,"mtime":1614451123288},{"name":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(array, groupFn) {\n    var result, _iterator, _step, item, group;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            result = new Map();\n            _iterator = _createForOfIteratorHelper(array);\n            _context.prev = 2;\n\n            _iterator.s();\n\n          case 4:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 12;\n              break;\n            }\n\n            item = _step.value;\n            _context.next = 8;\n            return Promise.resolve(groupFn(item));\n\n          case 8:\n            group = _context.sent;\n            result.set(group, result.has(group) ? [].concat(_toConsumableArray(result.get(group)), [item]) : [item]);\n\n          case 10:\n            _context.next = 4;\n            break;\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](2);\n\n            _iterator.e(_context.t0);\n\n          case 17:\n            _context.prev = 17;\n\n            _iterator.f();\n\n            return _context.finish(17);\n\n          case 20:\n            return _context.abrupt(\"return\", result);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 14, 17, 20]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":19,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":19,"column":6},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":19,"column":7},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":7}},{"generated":{"line":19,"column":14},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":20,"column":69},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"array","generated":{"line":20,"column":86},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":24}},{"generated":{"line":20,"column":91},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"groupFn","generated":{"line":20,"column":93},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":31}},{"generated":{"line":20,"column":100},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":21,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":23,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":24,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":25,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":26,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"result","generated":{"line":27,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":2,"column":8}},{"name":"result","generated":{"line":27,"column":12},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":2,"column":8}},{"generated":{"line":27,"column":18},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":27,"column":21},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":2,"column":17}},{"name":"Map","generated":{"line":27,"column":25},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":2,"column":21}},{"generated":{"line":27,"column":28},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":2,"column":17}},{"generated":{"line":27,"column":30},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":28,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"array","generated":{"line":28,"column":51},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":4,"column":21}},{"generated":{"line":28,"column":56},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":29,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":31,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":33,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":34,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":35,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":36,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":37,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"item","generated":{"line":39,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":4,"column":13}},{"name":"item","generated":{"line":39,"column":12},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":4,"column":13}},{"generated":{"line":39,"column":16},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":40,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":41,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"Promise","generated":{"line":41,"column":19},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":24}},{"generated":{"line":41,"column":26},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":31}},{"name":"resolve","generated":{"line":41,"column":27},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":32}},{"generated":{"line":41,"column":34},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":24}},{"name":"groupFn","generated":{"line":41,"column":35},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":40}},{"generated":{"line":41,"column":42},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":47}},{"name":"item","generated":{"line":41,"column":43},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":48}},{"generated":{"line":41,"column":47},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":47}},{"generated":{"line":41,"column":48},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":24}},{"generated":{"line":41,"column":49},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":43,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"group","generated":{"line":44,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":10}},{"name":"group","generated":{"line":44,"column":12},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":5,"column":10}},{"generated":{"line":44,"column":17},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"result","generated":{"line":45,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":4}},{"name":"result","generated":{"line":45,"column":12},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":4}},{"generated":{"line":45,"column":18},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":10}},{"name":"set","generated":{"line":45,"column":19},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":11}},{"generated":{"line":45,"column":22},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":4}},{"name":"group","generated":{"line":45,"column":23},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":15}},{"generated":{"line":45,"column":28},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":4}},{"name":"result","generated":{"line":45,"column":30},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":22}},{"generated":{"line":45,"column":36},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":28}},{"name":"has","generated":{"line":45,"column":37},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":29}},{"generated":{"line":45,"column":40},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":22}},{"name":"group","generated":{"line":45,"column":41},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":33}},{"generated":{"line":45,"column":46},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":22}},{"name":"result","generated":{"line":45,"column":79},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":46}},{"generated":{"line":45,"column":85},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":52}},{"name":"get","generated":{"line":45,"column":86},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":53}},{"generated":{"line":45,"column":89},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":46}},{"name":"group","generated":{"line":45,"column":90},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":57}},{"generated":{"line":45,"column":95},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":46}},{"generated":{"line":45,"column":96},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":22}},{"name":"item","generated":{"line":45,"column":100},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":65}},{"generated":{"line":45,"column":104},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":22}},{"generated":{"line":45,"column":109},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":73}},{"name":"item","generated":{"line":45,"column":110},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":74}},{"generated":{"line":45,"column":114},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":73}},{"generated":{"line":45,"column":115},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":6,"column":4}},{"generated":{"line":47,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":48,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":49,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":51,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":52,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":53,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":55,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":56,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":57,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":59,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":61,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":62,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":64,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":66,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":68,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":69,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"name":"result","generated":{"line":69,"column":45},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":9,"column":9}},{"generated":{"line":69,"column":51},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":71,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":72,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":73,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":74,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":75,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":76,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":77,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":17}},{"generated":{"line":77,"column":3},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/kafkajs/src/utils/groupBy.js","original":{"line":1,"column":0}}],"sources":{"node_modules/kafkajs/src/utils/groupBy.js":"module.exports = async (array, groupFn) => {\n  const result = new Map()\n\n  for (const item of array) {\n    const group = await Promise.resolve(groupFn(item))\n    result.set(group, result.has(group) ? [...result.get(group), item] : [item])\n  }\n\n  return result\n}\n"},"lineCount":null}},"error":null,"hash":"4148aae08bcf2539a57cb606064bfd03","cacheData":{"env":{}}}