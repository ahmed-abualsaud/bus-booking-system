{"id":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","dependencies":[{"name":"/var/www/html/bus-booking-prototype/package.json","includedInParent":true,"mtime":1614451123288},{"name":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../encoder","loc":{"line":18,"column":24},"parent":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/src/protocol/sasl/plain/request.js","resolved":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/src/protocol/encoder.js"}],"generated":{"js":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * http://www.ietf.org/rfc/rfc2595.txt\n *\n * The mechanism consists of a single message from the client to the\n * server.  The client sends the authorization identity (identity to\n * login as), followed by a US-ASCII NUL character, followed by the\n * authentication identity (identity whose password will be used),\n * followed by a US-ASCII NUL character, followed by the clear-text\n * password.  The client may leave the authorization identity empty to\n * indicate that it is the same as the authentication identity.\n *\n * The server will verify the authentication identity and password with\n * the system authentication database and verify that the authentication\n * credentials permit the client to login as the authorization identity.\n * If both steps succeed, the user is logged in.\n */\nvar Encoder = require('../../encoder');\n\nvar US_ASCII_NULL_CHAR = \"\\0\";\n\nmodule.exports = function (_ref) {\n  var _ref$authorizationIde = _ref.authorizationIdentity,\n      authorizationIdentity = _ref$authorizationIde === void 0 ? null : _ref$authorizationIde,\n      username = _ref.username,\n      password = _ref.password;\n  return {\n    encode: function () {\n      var _encode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Encoder().writeBytes([authorizationIdentity, username, password].join(US_ASCII_NULL_CHAR)));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function encode() {\n        return _encode.apply(this, arguments);\n      }\n\n      return encode;\n    }()\n  };\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":5,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":1,"column":0}},{"generated":{"line":6,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":3,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":5,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":6,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":8,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":9,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":12,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":13,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":14,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":15,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":16,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":0}},{"name":"Encoder","generated":{"line":21,"column":4},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":6}},{"generated":{"line":21,"column":11},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":13}},{"name":"require","generated":{"line":21,"column":14},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":16}},{"generated":{"line":21,"column":21},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":23}},{"generated":{"line":21,"column":22},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":24}},{"generated":{"line":21,"column":37},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":23}},{"generated":{"line":21,"column":38},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":18,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":20,"column":0}},{"name":"US_ASCII_NULL_CHAR","generated":{"line":23,"column":4},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":20,"column":6}},{"generated":{"line":23,"column":22},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":20,"column":24}},{"generated":{"line":23,"column":25},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":20,"column":27}},{"generated":{"line":23,"column":29},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":20,"column":0}},{"name":"module","generated":{"line":25,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":0}},{"generated":{"line":25,"column":6},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":6}},{"name":"exports","generated":{"line":25,"column":7},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":7}},{"generated":{"line":25,"column":14},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":0}},{"generated":{"line":25,"column":17},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":26,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"name":"authorizationIdentity","generated":{"line":26,"column":35},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":20}},{"generated":{"line":26,"column":56},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":27,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"name":"authorizationIdentity","generated":{"line":27,"column":6},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":20}},{"generated":{"line":27,"column":27},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":27,"column":65},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":44}},{"generated":{"line":27,"column":69},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":28,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"name":"username","generated":{"line":28,"column":6},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":50}},{"generated":{"line":28,"column":14},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"name":"username","generated":{"line":28,"column":22},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":50}},{"generated":{"line":28,"column":30},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":29,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"name":"password","generated":{"line":29,"column":6},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":60}},{"generated":{"line":29,"column":14},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"name":"password","generated":{"line":29,"column":22},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":60}},{"generated":{"line":29,"column":30},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":30,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":30,"column":9},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":76}},{"name":"encode","generated":{"line":31,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":2}},{"name":"encode","generated":{"line":31,"column":4},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":2}},{"generated":{"line":31,"column":10},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":32,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":32,"column":76},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":33,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":34,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":35,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":36,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":37,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":37,"column":49},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":24,"column":11}},{"name":"Encoder","generated":{"line":37,"column":53},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":24,"column":15}},{"generated":{"line":37,"column":60},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":24,"column":11}},{"name":"writeBytes","generated":{"line":37,"column":63},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":24,"column":25}},{"generated":{"line":37,"column":73},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":24,"column":11}},{"generated":{"line":37,"column":74},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":6}},{"name":"authorizationIdentity","generated":{"line":37,"column":75},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":7}},{"generated":{"line":37,"column":96},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":6}},{"name":"username","generated":{"line":37,"column":98},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":30}},{"generated":{"line":37,"column":106},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":6}},{"name":"password","generated":{"line":37,"column":108},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":40}},{"generated":{"line":37,"column":116},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":6}},{"name":"join","generated":{"line":37,"column":118},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":50}},{"generated":{"line":37,"column":122},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":6}},{"name":"US_ASCII_NULL_CHAR","generated":{"line":37,"column":123},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":55}},{"generated":{"line":37,"column":141},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":25,"column":6}},{"generated":{"line":37,"column":142},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":24,"column":11}},{"generated":{"line":37,"column":143},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":39,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":40,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":41,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":42,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":43,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":44,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":45,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":10}},{"generated":{"line":45,"column":7},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":47,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":48,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":49,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":51,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":52,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":23,"column":8}},{"generated":{"line":53,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":76}},{"generated":{"line":53,"column":3},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":54,"column":0},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":17}},{"generated":{"line":54,"column":1},"source":"node_modules/kafkajs/src/protocol/sasl/plain/request.js","original":{"line":22,"column":0}}],"sources":{"node_modules/kafkajs/src/protocol/sasl/plain/request.js":"/**\n * http://www.ietf.org/rfc/rfc2595.txt\n *\n * The mechanism consists of a single message from the client to the\n * server.  The client sends the authorization identity (identity to\n * login as), followed by a US-ASCII NUL character, followed by the\n * authentication identity (identity whose password will be used),\n * followed by a US-ASCII NUL character, followed by the clear-text\n * password.  The client may leave the authorization identity empty to\n * indicate that it is the same as the authentication identity.\n *\n * The server will verify the authentication identity and password with\n * the system authentication database and verify that the authentication\n * credentials permit the client to login as the authorization identity.\n * If both steps succeed, the user is logged in.\n */\n\nconst Encoder = require('../../encoder')\n\nconst US_ASCII_NULL_CHAR = '\\u0000'\n\nmodule.exports = ({ authorizationIdentity = null, username, password }) => ({\n  encode: async () => {\n    return new Encoder().writeBytes(\n      [authorizationIdentity, username, password].join(US_ASCII_NULL_CHAR)\n    )\n  },\n})\n"},"lineCount":null}},"error":null,"hash":"ba14a284e0c5848b7e76579d86ead45d","cacheData":{"env":{}}}