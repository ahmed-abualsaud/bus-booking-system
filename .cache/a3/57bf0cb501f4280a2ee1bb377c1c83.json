{"id":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","dependencies":[{"name":"/var/www/html/bus-booking-prototype/package.json","includedInParent":true,"mtime":1614451123288},{"name":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../../encoder","loc":{"line":1,"column":24},"parent":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","resolved":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/src/protocol/encoder.js"},{"name":"../../apiKeys","loc":{"line":2,"column":43},"parent":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","resolved":"/var/www/html/bus-booking-prototype/node_modules/kafkajs/src/protocol/requests/apiKeys.js"}],"generated":{"js":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Encoder = require('../../../encoder');\n\nvar _require = require('../../apiKeys'),\n    apiKey = _require.DescribeGroups;\n/**\n * DescribeGroups Request (Version: 0) => [group_ids]\n *   group_ids => STRING\n */\n\n/**\n * @param {Array} groupIds List of groupIds to request metadata for (an empty groupId array will return empty group metadata)\n */\n\n\nmodule.exports = function (_ref) {\n  var groupIds = _ref.groupIds;\n  return {\n    apiKey: apiKey,\n    apiVersion: 0,\n    apiName: 'DescribeGroups',\n    encode: function () {\n      var _encode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Encoder().writeArray(groupIds));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function encode() {\n        return _encode.apply(this, arguments);\n      }\n\n      return encode;\n    }()\n  };\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":5,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":0}},{"name":"Encoder","generated":{"line":5,"column":4},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":6}},{"generated":{"line":5,"column":11},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":13}},{"name":"require","generated":{"line":5,"column":14},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":16}},{"generated":{"line":5,"column":21},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":23}},{"generated":{"line":5,"column":22},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":24}},{"generated":{"line":5,"column":40},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":23}},{"generated":{"line":5,"column":41},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":1,"column":0}},{"name":"require","generated":{"line":7,"column":15},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":2,"column":35}},{"generated":{"line":7,"column":22},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":2,"column":42}},{"generated":{"line":7,"column":23},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":2,"column":43}},{"generated":{"line":7,"column":38},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":2,"column":42}},{"name":"apiKey","generated":{"line":8,"column":4},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":2,"column":24}},{"name":"DescribeGroups","generated":{"line":8,"column":22},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":2,"column":8}},{"generated":{"line":9,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":6,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":11,"column":0}},{"name":"module","generated":{"line":19,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":6},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":6}},{"name":"exports","generated":{"line":19,"column":7},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":7}},{"generated":{"line":19,"column":14},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":17},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":17}},{"generated":{"line":20,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":17}},{"name":"groupIds","generated":{"line":20,"column":6},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":20}},{"generated":{"line":20,"column":14},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":17}},{"name":"groupIds","generated":{"line":20,"column":22},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":20}},{"generated":{"line":20,"column":30},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":17}},{"generated":{"line":21,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":17}},{"generated":{"line":21,"column":9},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":36}},{"name":"apiKey","generated":{"line":22,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":13,"column":2}},{"name":"apiKey","generated":{"line":22,"column":4},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":13,"column":2}},{"generated":{"line":22,"column":10},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":13,"column":8}},{"name":"apiKey","generated":{"line":22,"column":12},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":13,"column":2}},{"generated":{"line":22,"column":18},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":36}},{"name":"apiVersion","generated":{"line":23,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":14,"column":2}},{"name":"apiVersion","generated":{"line":23,"column":4},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":14,"column":2}},{"generated":{"line":23,"column":14},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":14,"column":12}},{"generated":{"line":23,"column":16},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":14,"column":14}},{"generated":{"line":23,"column":17},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":36}},{"name":"apiName","generated":{"line":24,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":15,"column":2}},{"name":"apiName","generated":{"line":24,"column":4},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":15,"column":2}},{"generated":{"line":24,"column":11},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":15,"column":9}},{"generated":{"line":24,"column":13},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":15,"column":11}},{"generated":{"line":24,"column":29},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":36}},{"name":"encode","generated":{"line":25,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":2}},{"name":"encode","generated":{"line":25,"column":4},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":2}},{"generated":{"line":25,"column":10},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":26,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":26,"column":76},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":27,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":28,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":29,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":30,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":31,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":31,"column":49},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":17,"column":11}},{"name":"Encoder","generated":{"line":31,"column":53},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":17,"column":15}},{"generated":{"line":31,"column":60},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":17,"column":11}},{"name":"writeArray","generated":{"line":31,"column":63},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":17,"column":25}},{"generated":{"line":31,"column":73},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":17,"column":11}},{"name":"groupIds","generated":{"line":31,"column":74},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":17,"column":36}},{"generated":{"line":31,"column":82},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":17,"column":11}},{"generated":{"line":31,"column":83},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":33,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":34,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":35,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":36,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":37,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":38,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":39,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":10}},{"generated":{"line":39,"column":7},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":41,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":42,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":43,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":45,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":46,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":16,"column":8}},{"generated":{"line":47,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":36}},{"generated":{"line":47,"column":3},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":17}},{"generated":{"line":48,"column":0},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":17}},{"generated":{"line":48,"column":1},"source":"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js","original":{"line":12,"column":0}}],"sources":{"node_modules/kafkajs/src/protocol/requests/describeGroups/v0/request.js":"const Encoder = require('../../../encoder')\nconst { DescribeGroups: apiKey } = require('../../apiKeys')\n\n/**\n * DescribeGroups Request (Version: 0) => [group_ids]\n *   group_ids => STRING\n */\n\n/**\n * @param {Array} groupIds List of groupIds to request metadata for (an empty groupId array will return empty group metadata)\n */\nmodule.exports = ({ groupIds }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'DescribeGroups',\n  encode: async () => {\n    return new Encoder().writeArray(groupIds)\n  },\n})\n"},"lineCount":null}},"error":null,"hash":"5d4f2d102dd4239d50617a14161fec7b","cacheData":{"env":{}}}